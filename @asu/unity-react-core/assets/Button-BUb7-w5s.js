import{j as l}from"./jsx-runtime-Dtp4yoXy.js";import{c as i}from"./index-DqAnBlJf.js";import{P as e}from"./index-DamiE3XO.js";import"./index-iql2cimc.js";import{G as x}from"./GaEventWrapper-69f-L6ti.js";const O={name:"onclick",event:"link",action:"click",type:"internal link",region:"main content"},r=({label:u,cardTitle:f,ariaLabel:m,block:p,color:c,disabled:b,element:o,href:s,icon:a,innerRef:v,onClick:t,size:d,classes:y,target:g,...k})=>{const q=i("btn",{[`btn-${c}`]:!0,"btn-md":d==="small","btn-sm":d==="xsmall","btn-block":p,disabled:b});let n=o;s&&o==="button"&&(n="a");const h=V=>{t==null||t()};return l.jsx(x,{gaData:{...O,text:u,section:f},children:l.jsxs(n,{type:n==="button"&&t?"button":void 0,...k,className:i(y)||q,href:s,ref:v,onClick:h,"aria-label":m,target:n==="a"?g:null,children:[a&&l.jsx("i",{className:`${a==null?void 0:a[0]} fa-${a==null?void 0:a[1]} me-1`}),u]})})};r.propTypes={label:e.string,cardTitle:e.string,ariaLabel:e.string,block:e.bool,color:e.oneOf(["gold","maroon","gray","dark"]),disabled:e.bool,element:e.oneOfType([e.func,e.string,e.shape({$$typeof:e.symbol,render:e.func}),e.arrayOf(e.oneOfType([e.func,e.string,e.shape({$$typeof:e.symbol,render:e.func})]))]),href:e.string,icon:e.arrayOf(e.string),innerRef:e.oneOfType([e.object,e.func,e.string]),onClick:e.func,size:e.oneOf(["default","small","xsmall"]),classes:e.arrayOf(e.string),target:e.oneOf(["_blank","_self","_top","_parent"])};r.defaultProps={label:"",cardTitle:"",ariaLabel:void 0,block:void 0,color:"gray",disabled:void 0,element:"button",href:void 0,icon:void 0,innerRef:void 0,onClick:void 0,size:"default",classes:void 0,target:"_self"};r.__docgenInfo={description:`@param {ButtonProps} props
@returns {JSX.Element}`,methods:[],displayName:"Button",props:{label:{defaultValue:{value:'""',computed:!1},description:"Button label",type:{name:"string"},required:!1},cardTitle:{defaultValue:{value:'""',computed:!1},description:"Card title",type:{name:"string"},required:!1},ariaLabel:{defaultValue:{value:"undefined",computed:!0},description:"ARIA label for accessibility",type:{name:"string"},required:!1},block:{defaultValue:{value:"undefined",computed:!0},description:"Render button as a block-button?",type:{name:"bool"},required:!1},color:{defaultValue:{value:'"gray"',computed:!1},description:"Button background color",type:{name:"enum",value:[{value:'"gold"',computed:!1},{value:'"maroon"',computed:!1},{value:'"gray"',computed:!1},{value:'"dark"',computed:!1}]},required:!1},disabled:{defaultValue:{value:"undefined",computed:!0},description:"Disable the button?",type:{name:"bool"},required:!1},element:{defaultValue:{value:'"button"',computed:!1},description:`Pass in a Component to override default button element.
    For example: react-router Link`,type:{name:"union",value:[{name:"func"},{name:"string"},{name:"shape",value:{$$typeof:{name:"symbol",required:!1},render:{name:"func",required:!1}}},{name:"arrayOf",value:{name:"union",value:[{name:"func"},{name:"string"},{name:"shape",value:{$$typeof:{name:"symbol",required:!1},render:{name:"func",required:!1}}}]}}]},required:!1},href:{defaultValue:{value:"undefined",computed:!0},description:"Link target url; will cause button to be rendered as `<a>` link",type:{name:"string"},required:!1},icon:{defaultValue:{value:"undefined",computed:!0},description:"React Font Awesome icon prefix and name string to be rendered in button label. Ex: ['fab', 'drupal']",type:{name:"arrayOf",value:{name:"string"}},required:!1},innerRef:{defaultValue:{value:"undefined",computed:!0},description:`ref will only get you a reference to the Button component, use innerRef to
get a reference to the DOM element (for things like focus management).`,type:{name:"union",value:[{name:"object"},{name:"func"},{name:"string"}]},required:!1},onClick:{defaultValue:{value:"undefined",computed:!0},description:"Event handler function for `<button>`",type:{name:"func"},required:!1},size:{defaultValue:{value:'"default"',computed:!1},description:"Button size",type:{name:"enum",value:[{value:'"default"',computed:!1},{value:'"small"',computed:!1},{value:'"xsmall"',computed:!1}]},required:!1},classes:{defaultValue:{value:"undefined",computed:!0},description:"Classes to add to button",type:{name:"arrayOf",value:{name:"string"}},required:!1},target:{defaultValue:{value:'"_self"',computed:!1},description:"Link target type",type:{name:"enum",value:[{value:'"_blank"',computed:!1},{value:'"_self"',computed:!1},{value:'"_top"',computed:!1},{value:'"_parent"',computed:!1}]},required:!1}}};export{r as B};
